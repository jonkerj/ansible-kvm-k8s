---
- name: Check backing file presence
  delegate_to: "{{ virt_host }}"
  run_once: yes
  stat:
    path: "{{ hostvars[virt_host].virt_images }}/{{ virt_base_image }}.qcow2"
  register: backing_result

- name: Create base image
  run_once: yes
  when: backing_result.stat.exists == False
  delegate_to: "{{ virt_host }}"
  block:
  - name: Create temporary file to download CoreOS
    tempfile:
      suffix: .bz2
    register: tempfile
  
  - name: Download CoreOS image
    get_url:
      url: "{{ coreos_image_url }}"
      dest: "{{ tempfile.path }}"
      force: yes

  - name: Extract CoreOS image
    shell: "bunzip2 < {{ tempfile.path }} > {{ hostvars[virt_host].virt_images }}/{{ virt_base_image }}.qcow2"

  - name: Remove temporary file
    file:
      path: "{{ tempfile.path }}"
      state: absent

- name: Create snapshot file
  delegate_to: "{{ virt_host }}"
  command: "qemu-img create -f qcow2 -b {{ hostvars[virt_host].virt_images }}/{{ virt_base_image }}.qcow2 {{ hostvars[virt_host].virt_images }}/{{ inventory_hostname }}.qcow2"
  args:
    creates: "{{ hostvars[virt_host].virt_images }}/{{ inventory_hostname }}.qcow2"

- name: Check ignition file presence
  delegate_to: "{{ virt_host }}"
  stat:
    path: "{{ hostvars[virt_host].virt_images }}/{{ inventory_hostname }}.ign"
  register: ignition

- name: Create temporary file to template Container Linux config to
  delegate_to: "{{ virt_host }}"
  tempfile:
    suffix: .yaml
  register: tempfile
  when: ignition.stat.exists == False

- name: Create CoreOS Ignition config file
  delegate_to: "{{ virt_host }}"
  template:
    dest: "{{ tempfile.path }}"
    src: kube-ignition.yaml
  when: ignition.stat.exists == False

- name: Transpile Container Linux YAML to Ignition JSON
  delegate_to: "{{ virt_host }}"
  command: "ct -in-file {{ tempfile.path }} -out-file {{ hostvars[virt_host].virt_images }}/{{ inventory_hostname }}.ign"
  when: ignition.stat.exists == False

- name: Clean up temporary YAML file
  delegate_to: "{{ virt_host }}"
  file:
    path: "{{ tempfile.path }}"
    state: absent
  when: ignition.stat.exists == False
...
